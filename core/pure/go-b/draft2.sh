#!/bin/bash
#deps: golang 1.10+
mkdir -p deps
export GOPATH="$PWD/deps"
[ -d ./deps/src/github.com/Konstantin8105/c4go/ ] || (mkdir -p ./deps/src/github.com/Konstantin8105 && pushd ./deps/src/github.com/Konstantin8105 && git clone --depth 1 https://github.com/Konstantin8105/c4go.git && popd)
[ -f ./deps/bin/c4go ] || go get github.com/Konstantin8105/c4go

## 原始代碼

#if defined(__cplusplus)
#define LUAI_THROW(L,c)	throw(c)
#define LUAI_TRY(L,c,a)	try { a } catch(...) { if ((c)->status == 0) (c)->status = -1; }
#define luai_jmpbuf	int  /* dummy variable */

cat ../c/lang.c |
sed 's|^typedef struct lua_State lua_State;$||g' |
sed 's|^#define.*LUAI_TRY(L,c,a).*$|static int _GO_C_LUA_HACK_CATCH_ANY(){return rand();}\nstatic int _GO_C_LUA_HACK_TRY(){return rand();}\n#define LUAI_TRY(L,c,a) if(_GO_C_LUA_HACK_TRY()){a}else if(_GO_C_LUA_HACK_CATCH_ANY()){if ((c)->status == 0) (c)->status = -1;}|g' |
sed 's|^#define.*LUAI_THROW(L,c).*$|static int LUAI_THROW(lua_State *L, struct lua_longjmp *errorJmp){return rand();}|g' |
sed 's|^#define.*luai_jmpbuf.*$|#define luai_jmpbuf int|g' > lang.c.0

echo '/* Generated by make.rkt */' > lang.c
echo 'struct lua_State;'  >> lang.c
echo 'typedef struct lua_State lua_State;' >> lang.c
cat lang.c.0 >> lang.c
rm lang.c.0
cp ../c/testmain.c ../c/lang.h ./
./deps/bin/c4go transpile -s lang.c testmain.c
